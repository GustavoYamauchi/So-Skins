{"version":3,"sources":["components/ChartCard/ChartCard.tsx","components/ChartCard/ChartCard.styles.ts","httpClient.ts","components/Charts/MarketCapChart/MarketCapChart.tsx","components/Charts/MarketCapChart/useMarketCapChart.ts","components/Charts/MarketItemChart/MarketItemChart.tsx","components/Charts/MarketItemChart/useMarketItemChart.ts","App.tsx","theme.ts","index.tsx"],"names":["Groups","Periods","ChartContainer","styled","div","Card","MuiCard","Divider","MuiDivider","ChartCard","title","Chart","useState","DAY","groupBy","setGroupBy","ALL","period","setPeriod","Box","display","alignItems","justifyContent","Typography","variant","gutterBottom","width","marginRight","FormControl","fullWidth","InputLabel","id","Select","labelId","value","label","onChange","event","target","Object","values","map","group","MenuItem","ResponsiveContainer","httpClient","axios","create","baseURL","timeout","MarketCapChart","props","data","original","setOriginal","getData","useCallback","a","get","response","useEffect","useMemo","grouped","sort","b","timestamp","filter","item","date","Date","MONTH","isWithinInterval","start","sub","months","end","WEEK","weeks","YEAR","years","reduce","acc","cap","key","getUnixTime","startOfWeek","startOfMonth","totalNumeric","total","groupedList","getDateFormat","format","startWeek","month","getMonth","year","getYear","dayStartWeek","getDate","week","Math","ceil","byRarity","rare6","rare5","rare4","rare3","rare2","rare1","useMarketCapChart","ComposedChart","height","XAxis","dataKey","tickMargin","tick","fontSize","YAxis","tickFormatter","Intl","NumberFormat","style","currency","currencyDisplay","notation","compactDisplay","tickCount","Tooltip","formatter","maximumFractionDigits","Legend","iconType","verticalAlign","Bar","stackId","fill","Line","type","stroke","strokeWidth","dot","MarketItemChart","useMarketItemChart","App","AppBar","position","Toolbar","component","sx","flexGrow","Container","marginTop","Grid","container","spacing","xs","theme","createTheme","rootElement","document","getElementById","render","ThemeProvider","CssBaseline"],"mappings":"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","file":"static/js/main.d7458357.chunk.js","sourcesContent":["import React, { FC, useState } from 'react';\r\nimport { ResponsiveContainer } from 'recharts';\r\nimport { FormControl, InputLabel, MenuItem, Select, Typography } from '@mui/material';\r\n\r\nimport { Card, ChartContainer, Divider } from './ChartCard.styles';\r\nimport { Box } from '@mui/system';\r\n\r\nexport type ChartProps = {\r\n  groupBy: Groups;\r\n  period: Periods;\r\n}\r\n\r\nexport type ChartCardProps = {\r\n  title: string;\r\n  Chart: FC<ChartProps>;\r\n  children?: never;\r\n};\r\n\r\nexport enum Groups {\r\n  DAY = \"Dia\",\r\n  WEEK = \"Semana\",\r\n  MONTH = \"Mês\",\r\n}\r\n\r\nexport enum Periods {\r\n  WEEK = \"Semana\",\r\n  MONTH = \"Mês\",\r\n  YEAR = \"Ano\",\r\n  ALL = \"Desde o ínicio\",\r\n}\r\n\r\nexport const ChartCard: FC<ChartCardProps> = ({ title, Chart }) => {\r\n  const [groupBy, setGroupBy] = useState<Groups>(Groups.DAY);\r\n  const [period, setPeriod] = useState<Periods>(Periods.ALL);\r\n\r\n  return (\r\n    <Card>\r\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          {title}\r\n        </Typography>\r\n        <Box width={280} display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Box width={180} marginRight={2}>\r\n            <FormControl fullWidth>\r\n              <InputLabel id=\"groupBy\">Agrupar por</InputLabel>\r\n              <Select\r\n                labelId=\"groupBy\"\r\n                value={groupBy}\r\n                label=\"Agrupar por\"\r\n                onChange={(event) => setGroupBy(event.target.value as Groups)}\r\n              >\r\n                {Object.values(Groups).map(group => (\r\n                  <MenuItem value={group}>{group}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"period\">Período</InputLabel>\r\n            <Select\r\n              labelId=\"period\"\r\n              value={period}\r\n              label=\"Período\"\r\n              onChange={(event) => setPeriod(event.target.value as Periods)}\r\n            >\r\n              {Object.values(Periods).map(group => (\r\n                <MenuItem value={group}>{group}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n      </Box>\r\n      <Divider />\r\n      <ChartContainer>\r\n        <ResponsiveContainer>\r\n          <Chart groupBy={groupBy} period={period} />\r\n        </ResponsiveContainer>\r\n      </ChartContainer>\r\n    </Card>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\nimport { Card as MuiCard, Divider as MuiDivider } from '@mui/material';\r\n\r\nexport const ChartContainer = styled.div`\r\n  width: 100%;\r\n  height: 510px;\r\n`;\r\n\r\nexport const Card = styled(MuiCard)`\r\n  padding: 32px;\r\n`\r\n\r\nexport const Divider = styled(MuiDivider)`\r\n  margin: 16px 0px;\r\n`;\r\n","import axios from 'axios';\r\n\r\nexport const httpClient = axios.create({\r\n  baseURL: 'https://sy17pmj3tk.execute-api.us-east-2.amazonaws.com',\r\n  timeout: 10000\r\n});\r\n","import React, { FC } from 'react';\r\nimport {\r\n  Bar,\r\n  ComposedChart,\r\n  Legend,\r\n  Line,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis\r\n} from 'recharts';\r\nimport { ChartProps } from '../../ChartCard/ChartCard';\r\n\r\n\r\nimport { useMarketCapChart } from './useMarketCapChart';\r\n\r\nexport const MarketCapChart: FC<ChartProps> = (props) => {\r\n  const { data } = useMarketCapChart(props);\r\n\r\n  return (\r\n    <ComposedChart\r\n      width={1100}\r\n      height={510}\r\n      data={data}\r\n    >\r\n      <XAxis\r\n        dataKey=\"Data\"\r\n        tickMargin={6}\r\n        tick={{ fontSize: 14 }}\r\n      />\r\n      <YAxis\r\n        tickFormatter={(value) => Intl.NumberFormat('pt-BR', {\r\n          style: 'currency',\r\n          currency: 'USD',\r\n          currencyDisplay: \"narrowSymbol\",\r\n          notation: 'compact',\r\n          compactDisplay: 'short'\r\n        }).format(value)}\r\n        tickMargin={6}\r\n        tickCount={8}\r\n        tick={{ fontSize: 14 }}\r\n      />\r\n      <Tooltip\r\n        formatter={(value: number) => Intl.NumberFormat('pt-BR', {\r\n          style: 'currency',\r\n          currency: 'USD',\r\n          maximumFractionDigits: 2\r\n        }).format(value)}\r\n      />\r\n      <Legend iconType=\"square\" verticalAlign=\"top\" height={36} />\r\n      <Bar dataKey=\"Facas e luvas\" stackId=\"a\" fill=\"#FFD700\" />\r\n      <Bar dataKey=\"Oculto\" stackId=\"a\" fill=\"#eb4b4b\" />\r\n      <Bar dataKey=\"Secreto\" stackId=\"a\" fill=\"#d32ee6\" />\r\n      <Bar dataKey=\"Restrito\" stackId=\"a\" fill=\"#8847ff\" />\r\n      <Bar dataKey=\"Nível militar\" stackId=\"a\" fill=\"#4b69ff\" />\r\n      <Bar dataKey=\"Nível industrial\" stackId=\"a\" fill=\"#5e98d9\" />\r\n      <Line type=\"monotone\" dataKey=\"Total\" stroke=\"#1ed761\" strokeWidth={4} dot={false} />\r\n    </ComposedChart>\r\n  );\r\n};\r\n","import { format, getDate, getDay, getMonth, getUnixTime, getWeekOfMonth, getYear, isWithinInterval, startOfMonth, startOfWeek, sub } from 'date-fns';\r\nimport { useCallback, useEffect, useMemo, useState } from 'react';\r\n\r\nimport { httpClient } from '../../../httpClient';\r\nimport { ChartProps, Groups, Periods } from '../../ChartCard/ChartCard';\r\n\r\ntype MarketCap = {\r\n  id: string;\r\n  total: string;\r\n  byRarity: {\r\n    rare1: string;\r\n    rare2: string;\r\n    rare3: string;\r\n    rare4: string;\r\n    rare5: string;\r\n    rare6: string;\r\n  },\r\n  timestamp: string;\r\n}\r\n\r\ntype MarketCapResponse = Array<{\r\n  id: string;\r\n  total: string;\r\n  byRarity: {\r\n    rare1: string;\r\n    rare2: string;\r\n    rare3: string;\r\n    rare4: string;\r\n    rare5: string;\r\n    rare6: string;\r\n  },\r\n  timestamp: string;\r\n}>\r\n\r\nexport const useMarketCapChart = ({ groupBy, period }: ChartProps) => {\r\n  const [original, setOriginal] = useState<MarketCapResponse>([]);\r\n\r\n  const getData = useCallback(async () => {\r\n    const response = await httpClient.get(\r\n      '/market-caps'\r\n    );\r\n\r\n    setOriginal(response.data);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [getData]);\r\n\r\n  const data = useMemo(() => {\r\n    const sorted = [...original].sort((a, b) => +a.timestamp - +b.timestamp);\r\n    const filteredByPeriod = sorted.filter((item) => {\r\n      const date = new Date();\r\n\r\n      switch(period) {\r\n        case Periods.ALL:\r\n          return true;\r\n        case Periods.MONTH:\r\n          return isWithinInterval(\r\n            new Date(+item.timestamp),\r\n            { start: sub(date, { months: 1 }), end: date }\r\n          );\r\n        case Periods.WEEK:\r\n          return isWithinInterval(\r\n            new Date(+item.timestamp),\r\n            { start: sub(date, { weeks: 1 }), end: date }\r\n          );\r\n        case Periods.YEAR:\r\n          return isWithinInterval(\r\n            new Date(+item.timestamp),\r\n            { start: sub(date, { years: 1 }), end: date }\r\n          );\r\n      } \r\n    });\r\n\r\n    const grouped = filteredByPeriod.reduce<Record<string, MarketCap>>((acc, cap) => {\r\n      let key: string;\r\n      if (groupBy === Groups.DAY) {\r\n         key = cap.timestamp;\r\n      } else if (groupBy === Groups.WEEK) {\r\n        key = '' + getUnixTime(startOfWeek(new Date(+cap.timestamp))) * 1000;\r\n      } else {\r\n        key = '' + getUnixTime(startOfMonth(new Date(+cap.timestamp))) * 1000;\r\n      }\r\n\r\n      const totalNumeric = +cap.total;\r\n      const currentTotal = +(acc[key]?.total) ?? 0;\r\n\r\n      if (+currentTotal > totalNumeric) {\r\n        return acc;\r\n      }\r\n\r\n      return {...acc, [key]: { ...cap, timestamp: key }}\r\n    }, {});\r\n\r\n    const groupedList = Object.values(grouped);\r\n\r\n    const getDateFormat = (timestamp: number): string => {\r\n      if (groupBy === Groups.DAY) {\r\n        return format(new Date(timestamp), 'dd/MM/yyyy');\r\n      } else if (groupBy === Groups.WEEK) {\r\n        const startWeek = startOfWeek(new Date(timestamp));\r\n        const month = getMonth(new Date(timestamp));\r\n        const year = getYear(new Date(timestamp));\r\n\r\n        const dayStartWeek = getDate(startWeek);\r\n\r\n        const week = Math.ceil(dayStartWeek / 7);\r\n\r\n        return `${week} ${month}/${year}`;\r\n      } else {\r\n        return format(new Date(timestamp), 'MM/yyyy');\r\n      }\r\n    }\r\n\r\n    return groupedList.map((cap) => ({\r\n      'Data': getDateFormat(+cap.timestamp),\r\n      'Total': +cap.total,\r\n      'Facas e luvas': +cap.byRarity.rare6,\r\n      'Oculto': +cap.byRarity.rare5,\r\n      'Secreto': +cap.byRarity.rare4,\r\n      'Restrito': +cap.byRarity.rare3,\r\n      'Nível militar': +cap.byRarity.rare2,\r\n      'Nível industrial': +cap.byRarity.rare1\r\n    }));\r\n  }, [original, groupBy, period]);\r\n\r\n  return { data };\r\n};\r\n","import { format } from 'date-fns';\r\nimport React, { FC } from 'react';\r\nimport {\r\n  Bar,\r\n  CartesianGrid,\r\n  ComposedChart,\r\n  Legend,\r\n  Line,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis\r\n} from 'recharts';\r\nimport { ChartProps, Groups } from '../../ChartCard/ChartCard';\r\n\r\n\r\nimport { useMarketItemChart } from './useMarketItemChart';\r\n\r\nexport const MarketItemChart: FC<ChartProps> = (props) => {\r\n  const { data } = useMarketItemChart(props);\r\n\r\n  return (\r\n    <ComposedChart\r\n      width={1100}\r\n      height={510}\r\n      data={data}\r\n    >\r\n      <XAxis\r\n        dataKey=\"Data\"\r\n        tickMargin={6}\r\n        tick={{ fontSize: 14 }}\r\n      />\r\n      <YAxis\r\n        tickFormatter={(value) => Intl.NumberFormat('pt-BR', {\r\n          notation: 'compact',\r\n          compactDisplay: 'short'\r\n        }).format(value)}\r\n        tickMargin={6}\r\n        tickCount={8}\r\n        tick={{ fontSize: 14 }}\r\n      />\r\n      <Tooltip\r\n        formatter={(value: number) => Intl.NumberFormat('pt-BR', {\r\n          maximumFractionDigits: 0\r\n        }).format(value)}\r\n      />\r\n      <Legend iconType=\"square\" verticalAlign=\"top\" height={36} />\r\n      <Bar dataKey=\"Facas e luvas\" stackId=\"a\" fill=\"#FFD700\" />\r\n      <Bar dataKey=\"Oculto\" stackId=\"a\" fill=\"#eb4b4b\" />\r\n      <Bar dataKey=\"Secreto\" stackId=\"a\" fill=\"#d32ee6\" />\r\n      <Bar dataKey=\"Restrito\" stackId=\"a\" fill=\"#8847ff\" />\r\n      <Bar dataKey=\"Nível militar\" stackId=\"a\" fill=\"#4b69ff\" />\r\n      <Bar dataKey=\"Nível industrial\" stackId=\"a\" fill=\"#5e98d9\" />\r\n      <Line type=\"monotone\" dataKey=\"Total\" stroke=\"#1ed761\" strokeWidth={4} dot={false} />\r\n    </ComposedChart>\r\n  );\r\n};\r\n","import { format, getDate, getMonth, getUnixTime, getWeekOfMonth, getYear, isWithinInterval, previousSunday, startOfMonth, startOfWeek, sub } from 'date-fns';\r\nimport { useCallback, useEffect, useMemo, useState } from 'react';\r\n\r\nimport { httpClient } from '../../../httpClient';\r\nimport { ChartProps, Groups, Periods } from '../../ChartCard/ChartCard';\r\n\r\ntype MarketItem = {\r\n  id: string;\r\n  total: string;\r\n  byRarity: {\r\n    rare1: string;\r\n    rare2: string;\r\n    rare3: string;\r\n    rare4: string;\r\n    rare5: string;\r\n    rare6: string;\r\n  },\r\n  timestamp: string;\r\n}\r\n\r\ntype MarketItemResponse = Array<{\r\n  id: string;\r\n  total: string;\r\n  byRarity: {\r\n    rare1: string;\r\n    rare2: string;\r\n    rare3: string;\r\n    rare4: string;\r\n    rare5: string;\r\n    rare6: string;\r\n  },\r\n  timestamp: string;\r\n}>\r\n\r\nexport const useMarketItemChart = ({ groupBy, period }: ChartProps) => {\r\n  const [original, setOriginal] = useState<MarketItemResponse>([]);\r\n\r\n  const getData = useCallback(async () => {\r\n    const response = await httpClient.get(\r\n      '/market-items'\r\n    );\r\n\r\n    setOriginal(response.data);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [getData]);\r\n\r\n  const data = useMemo(() => {\r\n    const sorted = [...original].sort((a, b) => +a.timestamp - +b.timestamp);\r\n    const filteredByPeriod = sorted.filter((item) => {\r\n      const date = new Date();\r\n\r\n      switch(period) {\r\n        case Periods.ALL:\r\n          return true;\r\n        case Periods.MONTH:\r\n          return isWithinInterval(\r\n            new Date(+item.timestamp),\r\n            { start: sub(date, { months: 1 }), end: date }\r\n          );\r\n        case Periods.WEEK:\r\n          return isWithinInterval(\r\n            new Date(+item.timestamp),\r\n            { start: sub(date, { weeks: 1 }), end: date }\r\n          );\r\n        case Periods.YEAR:\r\n          return isWithinInterval(\r\n            new Date(+item.timestamp),\r\n            { start: sub(date, { years: 1 }), end: date }\r\n          );\r\n      } \r\n    });\r\n\r\n    const grouped = filteredByPeriod.reduce<Record<string, MarketItem>>((acc, cap) => {\r\n      let key: string;\r\n      if (groupBy === Groups.DAY) {\r\n         key = cap.timestamp;\r\n      } else if (groupBy === Groups.WEEK) {\r\n        key = '' + getUnixTime(startOfWeek(new Date(+cap.timestamp))) * 1000;\r\n      } else {\r\n        key = '' + getUnixTime(startOfMonth(new Date(+cap.timestamp))) * 1000;\r\n      }\r\n\r\n      const totalNumeric = +cap.total;\r\n      const currentTotal = +(acc[key]?.total) ?? 0;\r\n\r\n      if (+currentTotal > totalNumeric) {\r\n        return acc;\r\n      }\r\n\r\n      return {...acc, [key]: { ...cap, timestamp: key }}\r\n    }, {});\r\n\r\n    const groupedList = Object.values(grouped);\r\n\r\n    const getDateFormat = (timestamp: number): string => {\r\n      if (groupBy === Groups.DAY) {\r\n        return format(new Date(timestamp), 'dd/MM/yyyy');\r\n      } else if (groupBy === Groups.WEEK) {\r\n        const startWeek = startOfWeek(new Date(timestamp));\r\n        const month = getMonth(new Date(timestamp));\r\n        const year = getYear(new Date(timestamp));\r\n\r\n        const dayStartWeek = getDate(startWeek);\r\n\r\n        const week = Math.ceil(dayStartWeek / 7);\r\n\r\n        return `${week} ${month}/${year}`;\r\n      } else {\r\n        return format(new Date(timestamp), 'MM/yyyy');\r\n      }\r\n    }\r\n\r\n    return groupedList.map((cap) => ({\r\n      'Data': getDateFormat(+cap.timestamp),\r\n      'Total': +cap.total,\r\n      'Facas e luvas': +cap.byRarity.rare6,\r\n      'Oculto': +cap.byRarity.rare5,\r\n      'Secreto': +cap.byRarity.rare4,\r\n      'Restrito': +cap.byRarity.rare3,\r\n      'Nível militar': +cap.byRarity.rare2,\r\n      'Nível industrial': +cap.byRarity.rare1\r\n    }));\r\n  }, [original, groupBy, period]);\r\n\r\n  return { data };\r\n};\r\n","import React, { FC } from 'react';\r\nimport { AppBar, Button, Container, Grid, Toolbar, Typography } from '@mui/material';\r\n\r\nimport { ChartCard } from './components/ChartCard/ChartCard';\r\nimport { MarketCapChart } from './components/Charts/MarketCapChart/MarketCapChart';\r\nimport { MarketItemChart } from './components/Charts/MarketItemChart/MarketItemChart';\r\n\r\nexport const App: FC = () => (\r\n  <>\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n          Só skins  - Gustavo Yamauchi Souza Reis e Marco Antônio Barão\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n    <Container sx={{ marginTop: 4 }}>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <ChartCard title=\"Valor de mercado\" Chart={MarketCapChart} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ChartCard title=\"Itens no mercado\" Chart={MarketItemChart} />\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  </>\r\n);\r\n","import { createTheme } from '@mui/material/styles';\r\n\r\nexport const theme = createTheme();","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { ThemeProvider } from '@mui/material/styles'\r\nimport { CssBaseline } from '@mui/material';\r\n\r\nimport { App } from './App';\r\nimport { theme } from './theme';\r\n\r\n\r\nconst rootElement = document.getElementById('root');\r\nrender(\r\n  <ThemeProvider theme={theme}>\r\n    <CssBaseline />\r\n    <App />\r\n  </ThemeProvider>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}